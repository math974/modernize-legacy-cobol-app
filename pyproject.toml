[tool.ruff]
# Configuration pour Ruff - Linter Python ultra-rapide (écrit en Rust)

# Longueur de ligne (PEP8 recommande 79, mais 88 est plus moderne)
line-length = 88

# Version Python cible
target-version = "py311"

# Fichiers à exclure
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    "build",
    "dist",
    "*.egg-info",
]

[tool.ruff.lint]
# Règles à activer (PEP8 + bonnes pratiques)
select = [
    "E",   # pycodestyle errors (PEP8)
    "W",   # pycodestyle warnings (PEP8)
    "F",   # Pyflakes (erreurs logiques)
    "I",   # isort (tri des imports)
    "N",   # pep8-naming (nommage)
    "UP",  # pyupgrade (modernisation du code)
    "B",   # flake8-bugbear (bugs potentiels)
    "C4",  # flake8-comprehensions (optimisations)
    "PIE", # flake8-pie (améliorations diverses)
    "SIM", # flake8-simplify (simplifications)
]

# Règles à ignorer (si nécessaire)
ignore = [
    "E501",  # Ligne trop longue (géré par le formateur)
]

# Règles spécifiques par fichier
[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
    "N802",  # Noms de fonctions en minuscules (pour les tests)
    "N806",  # Variables en minuscules dans les fonctions
]

[tool.ruff.lint.isort]
# Configuration pour le tri des imports
known-first-party = ["main"]
force-single-line = false
lines-after-imports = 2

[tool.ruff.format]
# Configuration du formateur (équivalent à Black)
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Préserver les quotes dans les docstrings
docstring-code-format = true
