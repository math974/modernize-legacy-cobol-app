name: Legacy Compatibility Tests

on:
  push:
    branches: [ "main" ]
    tags: [ "v*" ]
  pull_request:

jobs:
  test-compatibility:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: pip install pytest

      - name: Install COBOL compiler
        run: |
          sudo apt-get update
          sudo apt-get install -y gnucobol

      - name: Compile COBOL application
        run: |
          cobc -x -o accountsystem main.cob operations.cob data.cob

      - name: Generate Golden Master
        run: python generate_golden_master.py

      - name: Run tests against Golden Master
        run: pytest -v test_golden_master.py

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Ruff
        run: pip install ruff

      - name: Run Ruff linter (PEP8 + more)
        run: ruff check . --output-format=github

      - name: Run Ruff formatter check
        run: ruff format --check .

  unit-tests:
    runs-on: ubuntu-latest
    needs: [test-compatibility, code-quality]  # it's run after the golden master and the code quality

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Python dependencies
        run: pip install pytest

      - name: Run Python unit tests
        run: pytest -v test_unit.py --tb=short

      - name: Run unit tests with coverage
        run: |
          pip install pytest-cov
          pytest test_unit.py --cov=main --cov-report=term-missing --cov-report=xml --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov

  publish-pypi:
    runs-on: ubuntu-latest
    needs: [test-compatibility, code-quality, unit-tests]
    if: startsWith(github.ref, 'refs/tags/v')
    environment: prod

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: python -m build

      - name: Check package
        run: twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload dist/*
